version: "3"

services:
  shop:
    container_name: shop
    build:
      context: .
      dockerfile: shop.Dockerfile
    env_file:
      - .env
    environment:
      DJANGO_DEBUG: 1
      DATABASE_URL: 'postgresql://postgres:alex@db_shop:5432/db_shop'
      DATABASE_HOST: 'db'
    ports:
      - 8000:8000
    expose:
      - 8000
    networks:
      - webnet
      - nginx_network
#      - shop_db_net
    depends_on:
      - db_shop
    volumes:
      - ./shop:/app
    command: sh /runserver.sh

  store:
    container_name: store
    build:
      context: .
      dockerfile: store.Dockerfile
    env_file:
      - .env
    environment:
      DJANGO_DEBUG: 1
      DATABASE_URL: 'postgresql://postgres:postgres@db_store:5432/db_store'
      DATABASE_HOST: 'db'
    ports:
      - 8001:8001
    expose:
      - 8001
    networks:
      - webnet
      - nginx_network
      - store_db_net
    depends_on:
      - db_store
    volumes:
      - ./store:/app
    command: sh /runserver.sh

  db_shop:
    container_name: db_shop
    image: postgres:12
    environment:
      POSTGRES_USER: 'alex'
      POSTGRES_PASSWORD: 'admin'
      POSTGRES_DB: 'db_shop'
    expose:
      - 5432
    networks:
      - webnet
      - nginx_network
#      - shop_db_net
    volumes:
      - db_shop_vol:/var/lib/postgresql/data

  db_store:
    container_name: db_store
    image: postgres:12
    environment:
      POSTGRES_USER: 'alex'
      POSTGRES_PASSWORD: 'admin'
      POSTGRES_DB: 'db_store'
    expose:
      - 5432
    networks:
      - webnet
      - nginx_network
      - store_db_net
    volumes:
      - db_store_vol:/var/lib/postgresql/data

  redis:
    container_name: redis
    image: redis:7.0.7
    restart: on-failure
    networks:
      - webnet
      - nginx_network
    expose:
      - 6379

  amqp:
    container_name: amqp
    image: rabbitmq:3.10.7-management
    restart: on-failure
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - webnet
      - nginx_network
    expose:
      - 4369
      - 5671
      - 5672
      - 15672
      - 25672
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq

  celery_shop:
    container_name: celery
    image: celery:4.0.2
    restart: on-failure
    depends_on:
      - amqp
      - redis
      - db_shop
    expose: []
    networks:
      - webnet
      - nginx_network
    environment:
      C_FORCE_ROOT: 'true'
      CHECK_WEB: 'true'
      DATABASE_URL: 'postgresql://postgres:postgres@db_shop:5432/db_shop'
      DATABASE_HOST: 'db_shop'
      DATABASE_PORT: '5432'
      REDIS_URL: 'redis://redis:6379/0'
      REDIS_CACHE: 'redis:6379'
      AMQP_URL: 'amqp://rabbitmq:5672'
      WEB_HOST: 'shop'
      WEB_PORT: '8000'

  mailhog:
    container_name: mailhog
    image: mailhog/mailhog
    command: [ "-smtp-bind-addr", "0.0.0.0:25" ]
    user: root
    restart: on-failure
    logging:
      driver: 'none'
    ports:
      - 1025:1025 # smtp server
      - 8025:8025 # web ui
    networks:
      - webnet
      - nginx_network
    expose:
      - 25
      - 8025

  nginx:
    container_name: nginx
    build:
      context: .
      dockerfile: nginx.Dockerfile
    restart: on-failure
    networks:
      - webnet
      - nginx_network
    ports:
      - 80:80
    depends_on:
      - shop
      - store

networks:
  webnet:
  nginx_network:
  shop_db_net:
  store_db_net:

volumes:
  db_shop_vol:
  db_store_vol:
